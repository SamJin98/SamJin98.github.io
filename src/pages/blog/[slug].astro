---
// src/pages/blog/[slug].astro
import { getCollection } from 'astro:content'
import { Image } from 'astro:assets'
import type { CollectionEntry } from 'astro:content'
import Layout from '../../layouts/Layout.astro'
import GlassHeader from '@/components/GlassHeader'

interface Props {
  post: CollectionEntry<'blog'>
}

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog')
  return blogPosts.map(post => ({
    params: { slug: post.slug },
    props: { post }
  }))
}
const { post } = Astro.props
const { Content } = await post.render()

// Format the date
const formattedDate = new Date(post.data.date).toLocaleDateString('en-US', {
  month: 'short',
  day: 'numeric'
})
---

<Layout title={post.data.title}>
  <GlassHeader client:only="react" pathname={Astro.url.pathname} />
  <div class="flex flex-col min-h-screen">
    <main class="flex-grow container mx-auto px-4 py-8 pt-24 max-w-4xl">
      <div class="mb-8">
        <a
          href="/blog"
          class="inline-flex items-center text-sm text-muted-foreground hover:text-foreground transition-colors"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="mr-1"
          >
            <path d="m15 18-6-6 6-6"></path>
          </svg>
          Back
        </a>
      </div>

      <article>
        <header class="blog-header mb-6">
          <h1 class="text-4xl font-bold mb-2">{post.data.title}</h1>
          <time class="text-muted-foreground block mb-3">{formattedDate}</time>

          {
            post.data.tags && post.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-2 mb-4">
                {[...post.data.tags]
                  .sort((a, b) => a.localeCompare(b))
                  .map((tag: string) => (
                    <span class="tag text-xs px-2.5 py-1 rounded-full font-medium">
                      {tag}
                    </span>
                  ))}
              </div>
            )
          }
        </header>

        {
          post.data.excerpt && (
            <div class="excerpt-container mb-10 p-6 border-l-4 border-accent/100 bg-secondary/5 rounded-r-lg">
              <p class="text-lg font-medium text-foreground/90 leading-relaxed">
                {post.data.excerpt}
              </p>
            </div>
          )
        }

        <div class="prose prose-invert max-w-none">
          <div class="mdx-content">
            <Content components={{}} />
          </div>
        </div>
      </article>
    </main>
  </div>
</Layout>

<style>
  .blog-header {
    font-family: 'Quicksand', 'Nunito', 'Poppins', sans-serif;
    font-weight: 400;
    letter-spacing: 0.01em;
  }

  .blog-header h1 {
    font-weight: 500;
  }

  .tag {
    background-color: var(--color-accent);
    color: var(--color-accent-foreground);
    opacity: 0.7;
  }

  .excerpt-container {
    font-family: 'Quicksand', 'Nunito', 'Poppins', sans-serif;
    position: relative;
  }

  .prose {
    max-width: 80ch;
  }

  .prose :global(p) {
    margin-bottom: 1.5em;
    line-height: 1.8;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  .prose :global(h2) {
    font-size: 1.75rem;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    font-weight: 600;
    font-family: 'Quicksand', 'Nunito', 'Poppins', sans-serif;
    letter-spacing: 0.01em;
  }

  .prose :global(h3) {
    font-size: 1.35rem;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
    font-family: 'Quicksand', 'Nunito', 'Poppins', sans-serif;
    letter-spacing: 0.01em;
  }

  .prose :global(ul),
  .prose :global(ol) {
    margin-bottom: 1.5em;
    padding-left: 1.5em;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  .prose :global(li) {
    margin-bottom: 0.5em;
  }

  .prose :global(pre) {
    padding: 1.25rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1.5em 0;
  }

  .prose :global(code) {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      monospace;
  }

  .prose :global(a) {
    color: var(--color-primary);
    text-decoration: underline;
    text-underline-offset: 0.2em;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  .prose :global(a:hover) {
    text-decoration: none;
  }

  .prose :global(blockquote) {
    border-left: 3px solid var(--color-border);
    padding-left: 1rem;
    font-style: italic;
    margin: 1.5em 0;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }
</style>
