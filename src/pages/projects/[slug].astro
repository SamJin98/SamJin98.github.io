---
import { getCollection } from 'astro:content'
import { Image } from 'astro:assets'
import type { CollectionEntry, ImageMetadata } from 'astro:content'
import Layout from '../../layouts/Layout.astro'
import GlassHeader from '@/components/GlassHeader'
import BackToTop from '@/components/BackToTop'

interface Props {
  project: CollectionEntry<'projects'>
}

export async function getStaticPaths() {
  const projectEntries = await getCollection('projects')
  return projectEntries.map(project => ({
    params: { slug: project.slug },
    props: { project }
  }))
}
const { project } = Astro.props
const { Content } = await project.render()

// Format the date
const formattedDate = new Date(project.data.date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
})

// Import all images from the projects/resources directory
const imageFiles = import.meta.glob<{ default: ImageMetadata }>(
  '/src/content/projects/resources/**/*.{png,jpg,jpeg,gif}'
)

// Get the project image path
const imagePath = `/src/content/projects/resources/${project.data.image}`
---

<Layout title={project.data.title}>
  <GlassHeader client:only="react" pathname={Astro.url.pathname} />
  <div class="flex flex-col min-h-screen">
    <main class="flex-grow container mx-auto px-4 py-8 pt-24 max-w-5xl">
      <div class="mb-8">
        <a
          href="/projects"
          class="inline-flex items-center text-sm text-muted-foreground hover:text-foreground transition-colors"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="mr-1"
          >
            <path d="m15 18-6-6 6-6"></path>
          </svg>
          Back to Projects
        </a>
      </div>

      <article>
        <div class="mb-8 rounded-xl overflow-hidden relative aspect-video">
          <Image
            src={imageFiles[imagePath]()}
            alt={project.data.title}
            width={1200}
            height={675}
            class="object-cover w-full h-full"
          />
          <div
            class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent"
          >
          </div>
          <div class="absolute bottom-0 left-0 right-0 p-6 text-white">
            <h1 class="text-4xl font-bold mb-2 drop-shadow-lg">
              {project.data.title}
            </h1>
            <time class="text-white/90 block mb-3 drop-shadow-md"
              >{formattedDate}</time
            >

            {
              project.data.tags && project.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-4">
                  {[...project.data.tags]
                    .sort((a, b) => a.localeCompare(b))
                    .map((tag: string) => (
                      <span class="bg-black/30 text-white text-xs px-2.5 py-1 rounded-md">
                        {tag}
                      </span>
                    ))}
                </div>
              )
            }
          </div>
        </div>

        <div class="flex flex-wrap gap-3 mb-8">
          <a
            href={project.data.github}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center space-x-2 text-sm px-4 py-2 rounded-lg bg-secondary hover:bg-secondary/90 transition-colors shadow-sm"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-github"
            >
              <path
                d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"
              ></path>
              <path d="M9 18c-4.51 2-5-2-7-2"></path>
            </svg>
            <span>View on GitHub</span>
          </a>
        </div>

        {
          project.data.excerpt && (
            <div class="excerpt-container mb-10 p-6 border-l-4 border-accent/80 bg-secondary/10 rounded-r-lg w-full">
              <p class="text-lg font-medium leading-relaxed">
                {project.data.excerpt}
              </p>
            </div>
          )
        }

        <div class="prose prose-lg dark:prose-invert max-w-none w-full">
          <Content components={{}} />
        </div>
      </article>

      <div class="mt-8 flex justify-between">
        <a
          href="/projects"
          class="inline-flex items-center text-sm text-muted-foreground hover:text-foreground transition-colors"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="mr-1"
          >
            <path d="m15 18-6-6 6-6"></path>
          </svg>
          Back to Projects
        </a>

        <a
          href="#top"
          class="inline-flex items-center text-sm text-muted-foreground hover:text-foreground transition-colors cursor-pointer"
        >
          <span class="mr-1">Back to top</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="m18 15-6-6-6 6"></path>
          </svg>
        </a>
      </div>
    </main>
  </div>
  <BackToTop client:only="react" />
</Layout>

<style>
  .prose {
    max-width: 100%;
    width: 100%;
  }

  .prose :global(h2) {
    font-size: 1.75rem;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    font-weight: 600;
    font-family: 'Quicksand', 'Nunito', 'Poppins', sans-serif;
    letter-spacing: 0.01em;
  }

  .prose :global(h3) {
    font-size: 1.35rem;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
    font-family: 'Quicksand', 'Nunito', 'Poppins', sans-serif;
    letter-spacing: 0.01em;
  }

  .prose :global(p) {
    margin-bottom: 1.5em;
    line-height: 1.8;
  }

  .prose :global(ul),
  .prose :global(ol) {
    margin-bottom: 1.5em;
    padding-left: 1.5em;
  }

  .prose :global(li) {
    margin-bottom: 0.5em;
  }

  .prose :global(pre) {
    padding: 1.25rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1.5em 0;
  }

  .prose :global(a) {
    color: var(--color-primary);
    text-decoration: underline;
    text-underline-offset: 0.2em;
  }

  .prose :global(a:hover) {
    text-decoration: none;
  }

  .prose :global(blockquote) {
    border-left: 3px solid var(--color-border);
    padding-left: 1rem;
    font-style: italic;
    margin: 1.5em 0;
  }

  /* Text shadow for better contrast */
  .drop-shadow-md {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);
  }

  .drop-shadow-lg {
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  }

  @media (prefers-color-scheme: dark) {
    .drop-shadow-md {
      text-shadow: 0 1px 3px rgba(0, 0, 0, 0.6);
    }
    .drop-shadow-lg {
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);
    }
  }
</style>
